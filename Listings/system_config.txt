; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\isp\obj\system_config.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\isp\obj\system_config.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\stm32f2xx_hal\Inc -I.\ISP\Src -I.\RTE\_ISP -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F2xx_DFP\2.10.0\Drivers\CMSIS\Device\ST\STM32F2xx\Include -D__UVISION_VERSION=528 -D_RTE_ -DSTM32F207xx --omf_browse=.\isp\obj\system_config.crf ISP\Src\System_config.c]
                          THUMB

                          AREA ||i.Error_Handler||, CODE, READONLY, ALIGN=2

                  Error_Handler PROC
;;;5      
;;;6      static void Error_Handler(void)
000000  e002              B        |L1.8|
                  |L1.2|
;;;7      {
;;;8          while(1)
;;;9          {
;;;10             printf("Clock Error");
000002  a002              ADR      r0,|L1.12|
000004  f7fffffe          BL       __2printf
                  |L1.8|
000008  e7fb              B        |L1.2|
;;;11         }
;;;12     }
;;;13     
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
00000c  436c6f63          DCB      "Clock Error",0
000010  6b204572
000014  726f7200

                          AREA ||i.SystemClock_Config||, CODE, READONLY, ALIGN=2

                  SystemClock_Config PROC
;;;14     #define RCC_PLLCFGR_120MHz      (0x240030CD)
;;;15     void SystemClock_Config(void)
000000  b500              PUSH     {lr}
;;;16     {
000002  b091              SUB      sp,sp,#0x44
;;;17         RCC_OscInitTypeDef RCC_OscInitStruct = {0};
000004  2130              MOVS     r1,#0x30
000006  a805              ADD      r0,sp,#0x14
000008  f7fffffe          BL       __aeabi_memclr4
;;;18         RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
00000c  2114              MOVS     r1,#0x14
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;19         
;;;20         /** Initializes the CPU, AHB and APB busses clocks
;;;21         */
;;;22         RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
000014  2002              MOVS     r0,#2
000016  9005              STR      r0,[sp,#0x14]
;;;23         RCC_OscInitStruct.HSIState = RCC_HSI_ON;
000018  2001              MOVS     r0,#1
00001a  9008              STR      r0,[sp,#0x20]
;;;24         RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
00001c  2010              MOVS     r0,#0x10
00001e  9009              STR      r0,[sp,#0x24]
;;;25         RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
000020  2002              MOVS     r0,#2
000022  900b              STR      r0,[sp,#0x2c]
;;;26         RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
000024  2100              MOVS     r1,#0
000026  910c              STR      r1,[sp,#0x30]
;;;27         RCC_OscInitStruct.PLL.PLLM = 13;
000028  210d              MOVS     r1,#0xd
00002a  910d              STR      r1,[sp,#0x34]
;;;28         RCC_OscInitStruct.PLL.PLLN = 195;
00002c  21c3              MOVS     r1,#0xc3
00002e  910e              STR      r1,[sp,#0x38]
;;;29         RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
000030  2102              MOVS     r1,#2
000032  910f              STR      r1,[sp,#0x3c]
;;;30         RCC_OscInitStruct.PLL.PLLQ = 4;
000034  2104              MOVS     r1,#4
000036  9110              STR      r1,[sp,#0x40]
;;;31         if(RCC_PLLCFGR_120MHz!=RCC->PLLCFGR)
000038  480f              LDR      r0,|L2.120|
00003a  6800              LDR      r0,[r0,#0]
00003c  490f              LDR      r1,|L2.124|
00003e  4288              CMP      r0,r1
000040  d005              BEQ      |L2.78|
;;;32         {
;;;33             if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
000042  a805              ADD      r0,sp,#0x14
000044  f7fffffe          BL       HAL_RCC_OscConfig
000048  b108              CBZ      r0,|L2.78|
;;;34             {
;;;35                 Error_Handler();
00004a  f7fffffe          BL       Error_Handler
                  |L2.78|
;;;36             }
;;;37         }
;;;38         /** Initializes the CPU, AHB and APB busses clocks
;;;39         */
;;;40         RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
00004e  200f              MOVS     r0,#0xf
000050  9000              STR      r0,[sp,#0]
;;;41                                         |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
;;;42         RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
000052  2002              MOVS     r0,#2
000054  9001              STR      r0,[sp,#4]
;;;43         RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
000056  2000              MOVS     r0,#0
000058  9002              STR      r0,[sp,#8]
;;;44         RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
00005a  f44f50a0          MOV      r0,#0x1400
00005e  9003              STR      r0,[sp,#0xc]
;;;45         RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
000060  f44f5080          MOV      r0,#0x1000
000064  9004              STR      r0,[sp,#0x10]
;;;46         if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
000066  2103              MOVS     r1,#3
000068  4668              MOV      r0,sp
00006a  f7fffffe          BL       HAL_RCC_ClockConfig
00006e  b108              CBZ      r0,|L2.116|
;;;47         {
;;;48             Error_Handler();
000070  f7fffffe          BL       Error_Handler
                  |L2.116|
;;;49         }
;;;50     }
000074  b011              ADD      sp,sp,#0x44
000076  bd00              POP      {pc}
                          ENDP

                  |L2.120|
                          DCD      0x40023804
                  |L2.124|
                          DCD      0x240030cd

;*** Start embedded assembler ***

#line 1 "ISP\\Src\\System_config.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_System_config_c_4557ba80____REV16|
#line 467 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.5.1\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___15_System_config_c_4557ba80____REV16| PROC
#line 468

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_System_config_c_4557ba80____REVSH|
#line 482
|__asm___15_System_config_c_4557ba80____REVSH| PROC
#line 483

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_System_config_c_4557ba80____RRX|
#line 669
|__asm___15_System_config_c_4557ba80____RRX| PROC
#line 670

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
